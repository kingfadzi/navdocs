# Production Deployment Configuration
# This is the default configuration used in production CI/CD pipelines
# For local testing, create deployment-config.local.yaml to override these settings

# kMigrator real installation paths (remote execution on PPM servers)
kmigrator:
  extract_script: "/opt/ppm/bin/kMigratorExtract.sh"
  import_script: "/opt/ppm/bin/kMigratorImport.sh"

# Deployment settings
deployment:
  bundle_dir: "./bundles"
  archive_dir: "./archives"
  storage_backend: "s3"  # S3 storage (bundles go directly: PPM → S3 → PPM)

# Vault Component Provider Registry
# Defines pluggable vault secret retrieval components with different parameter mappings
vault_component_providers:
  # Standard vault-secret-fetcher component (default)
  standard:
    component_url: "eros.butterflycluster.com/staging/vault-secret-fetcher/vault-retrieve"
    component_version: "v1.0.3"
    parameter_mappings:
      anchor_name: "anchor_name"       # Our internal name → Component's parameter name
      role: "vault_role"               # Our internal name → Component's parameter name
      secret_paths: "vault_secret_paths"  # Our internal name → Component's parameter name

  # Example: CSM vault retriever (alternative provider)
  # Uncomment and configure if using CSM vault system
  # csm:
  #   component_url: "eros.butterflycluster.com/staging/csm-vault/csm-retrieve"
  #   component_version: "v2.0.0"
  #   parameter_mappings:
  #     anchor_name: "anchor_name"
  #     role: "csm_role"               # CSM uses 'csm_role' instead of 'vault_role'
  #     secret_paths: "csm_secret_urls"  # CSM uses 'csm_secret_urls' instead of 'vault_secret_paths'

  # Example: HashiCorp Vault direct component
  # hashicorp:
  #   component_url: "gitlab.com/components/vault/hashicorp-vault-fetch"
  #   component_version: "v3.1.0"
  #   parameter_mappings:
  #     anchor_name: "output_anchor"
  #     role: "vault_approle"
  #     secret_paths: "secret_path_list"

# Global default vault component provider (can be overridden per server or S3)
vault_component_provider: "standard"

# Default credential environment variable names
# These are used for SSH authentication and kMigrator operations
# Can be overridden per server if vault components export different variable names
default_credentials:
  ssh_username_env: "PPM_SERVICE_ACCOUNT_USER"
  ssh_password_env: "PPM_SERVICE_ACCOUNT_PASSWORD"

# S3/MinIO configuration
s3:
  bucket_name: "ppm-deployment-bundles"
  region: "us-east-1"
  prefix: "bundles/"
  endpoint_url: "http://phobos:9002"
  # vault_component_provider: "standard"  # Optional: Override vault provider for S3 (defaults to global)
  # Credentials from Vault
  vault_roles:
    - name: s3-read
      path: secret/data/shared/s3

# PPM Server Registry with SSH configuration for remote execution
# Credentials injected from GitLab CI/CD environment variables (via Vault):
#
# Environment-specific (vault: secret/data/ppm/{env}/useast):
#   - PPM_SERVICE_ACCOUNT_USER: Service account username (used for both PPM API and SSH)
#   - PPM_SERVICE_ACCOUNT_PASSWORD: Service account password (used for both PPM API and SSH)
#
# Shared across all environments (vault: secret/data/shared/s3):
#   - AWS_ACCESS_KEY_ID: S3/MinIO access key
#   - AWS_SECRET_ACCESS_KEY: S3/MinIO secret key
servers:
  dev-ppm-useast:
    url: "https://ppm-dev.company.com"
    env_type: dev
    region: useast
    ssh_host: "mars"
    vault_roles:
      - name: ppm-dev
        path: secret/data/ppm/dev/useast

  test-ppm-useast:
    url: "https://ppm-test.company.com"
    env_type: test
    region: useast
    ssh_host: "phobos"
    vault_roles:
      - name: ppm-test
        path: secret/data/ppm/test/useast

  staging-ppm-useast:
    url: "https://ppm-staging.company.com"
    env_type: staging
    region: useast
    ssh_host: "cygnus"
    vault_roles:
      - name: ppm-staging
        path: secret/data/ppm/staging/useast

  prod-ppm-useast:
    url: "https://ppm-prod.company.com"
    env_type: prod
    region: useast
    ssh_host: "helios"
    # vault_component_provider: "csm"  # Optional: Override vault provider for this server (defaults to global)
    # ssh_username_env: "CSM_USER_ppm_prod"  # Optional: Override credential env var names (defaults to global)
    # ssh_password_env: "CSM_PASS_ppm_prod"  # Optional: Override credential env var names (defaults to global)
    vault_roles:
      - name: ppm-prod
        path: secret/data/ppm/prod/useast
