# Main PPM Deployment Pipeline
# This pipeline validates the consolidated BOM and then triggers reusable workflows.

stages:
  - validate
  - deploy

# Default configuration
default:
  image: almalinux:8
  before_script:
    # Install Python 3.11 and yq on AlmaLinux 8
    - dnf install -y -q git bash
    - dnf module reset -y python36
    - dnf install -y -q python3.11 python3.11-pip python3.11-devel
    - pip3.11 install PyYAML --quiet
    - ln -sf /usr/bin/python3.11 /usr/bin/python3
    - dnf install -y https://github.com/mikefarah/yq/releases/download/v4.27.5/yq_linux_amd64.rpm

# ============================================================
# STAGE 1: VALIDATE
# Validates the consolidated boms/deployment.yaml
# ============================================================

validate:
  stage: validate
  script:
    - echo "Validating consolidated BOM file..."
    - python3 tools/validate_bom.py --file boms/deployment.yaml --branch "$CI_COMMIT_BRANCH"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - boms/deployment.yaml
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH =~ /^feature\//'
      changes:
        - boms/deployment.yaml

# ============================================================
# STAGE 2: DEPLOY
# Triggers the reusable child pipeline for baseline and/or functional deployments.
# ============================================================

      # This script checks if the 'baseline' section exists and its 'enabled' flag is true.
      script: 'yq e ".baseline.enabled == true" boms/deployment.yaml | grep -q true'

deploy_functional:
  stage: deploy
  needs: [deploy_baseline] # Ensures baseline runs first if present
  trigger:
    include:
      - local: templates/gitlab-ci-template.yml
    strategy: depend
  variables:
    DEPLOYMENT_TYPE: functional
  rules:
    - if: '$CI_COMMIT_BRANCH && ($CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event")'
      changes:
        - boms/deployment.yaml
      # This script checks if the 'functional' section exists and its 'enabled' flag is true.
      exists:
        - boms/deployment.yaml
      when: on_success
      allow_failure: false
      script: 'yq e ".functional.enabled == true" boms/deployment.yaml | grep -q true'